{"version":3,"file":"static/webpack/static/development/pages/index.js.af3baae315dc3b336b0f.hot-update.js","sources":["webpack:///./pages/index.tsx"],"sourcesContent":["// import * as React from \"react\";\nimport React, { useState, useEffect } from \"react\";\nimport Head from \"next/head\";\n\nimport { Header } from \"../components/Header\";\nimport { Info } from \"../components/Info\";\n\nconst myAge = new Date().getFullYear() - 1988;\n\n// interface IOwnState {\n//   showString: boolean;\n//   secondsFromBd: number;\n// }\n\n// class Index extends React.Component<any, IOwnState> {\n//   private secondsTimer?: NodeJS.Timeout;\n\n//   public readonly state: IOwnState = {\n//     showString: false,\n//     secondsFromBd: 0\n//   };\n\n//   public componentDidMount() {\n//     this.setState({ secondsFromBd: this.calcSecondsFromBd() });\n//     this.secondsTimer = setInterval(() => {\n//       this.setState({ secondsFromBd: this.calcSecondsFromBd() });\n//     }, 1000);\n//   }\n\n//   public componentWillUnmount() {\n//     if (this.secondsTimer) {\n//       clearInterval(this.secondsTimer);\n//     }\n//   }\n\n//   public render() {\n//     return (\n//       <>\n//         <Head>\n//           <title>Dmitriy Gurinenko | Frontend developer | React, Vue</title>\n//           <meta charSet=\"utf-8\" />\n//           <meta\n//             name=\"viewport\"\n//             content=\"initial-scale=1.0, width=device-width\"\n//             key=\"viewport\"\n//           />\n//           <meta\n//             name=\"description\"\n//             content=\"Dmitriy Gurinenko CV\"\n//             key=\"description\"\n//           />\n//           <link rel=\"icon\" type=\"image/x-icon\" href=\"/static/favicon.ico\" />\n//         </Head>\n\n//         <Header age={myAge} seconds={this.state.secondsFromBd} />\n//         <Info />\n\n//         <style global jsx>{`\n//           html {\n//             font-family: \"Quicksand\", \"Source Sans Pro\", -apple-system,\n//               BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial,\n//               sans-serif; /* 1 */\n//             font-size: 16px;\n//             word-spacing: 1px;\n//             -ms-text-size-adjust: 100%;\n//             -webkit-text-size-adjust: 100%;\n//             -moz-osx-font-smoothing: grayscale;\n//             -webkit-font-smoothing: antialiased;\n//             box-sizing: border-box;\n//             background-color: #35495e;\n//           }\n\n//           *,\n//           *:before,\n//           *:after {\n//             box-sizing: border-box;\n//             margin: 0;\n//           }\n//           a {\n//             text-decoration: none;\n//             color: inherit;\n//           }\n//           .header-footer {\n//             width: 100%;\n//             background-color: #141c2f;\n//             color: white;\n//             padding: 30px;\n//             text-align: right;\n//           }\n//         `}</style>\n//       </>\n//     );\n//   }\n\n//   private calcSecondsFromBd = () => {\n//     const now = new Date();\n//     const currYear = now.getFullYear();\n//     const bdCurrYear = new Date(`${currYear}/01/12 10:50:00`);\n//     return Math.trunc((now.getTime() - bdCurrYear.getTime()) / 1000);\n//   };\n// }\n\nconst calcSecondsFromBd = () => {\n  const now = new Date();\n  const currYear = now.getFullYear();\n  const bdCurrYear = new Date(`${currYear}/01/12 10:50:00`);\n  return Math.trunc((now.getTime() - bdCurrYear.getTime()) / 1000);\n};\n\nconst Index: React.SFC = () => {\n  const [secondsFromBd, setSecondsFromBd] = useState(0);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setSecondsFromBd(() => calcSecondsFromBd());\n    }, 1000);\n    return () => clearInterval(interval);\n  }, []);\n\n  return (\n    <>\n      <Head>\n        <title>Dmitriy Gurinenko | Frontend developer | React, Vue</title>\n        <meta charSet=\"utf-8\" />\n        <meta\n          name=\"viewport\"\n          content=\"initial-scale=1.0, width=device-width\"\n          key=\"viewport\"\n        />\n        <meta\n          name=\"description\"\n          content=\"Dmitriy Gurinenko CV\"\n          key=\"description\"\n        />\n        <link rel=\"icon\" type=\"image/x-icon\" href=\"/static/favicon.ico\" />\n      </Head>\n\n      <Header age={myAge} seconds={secondsFromBd} />\n      <Info />\n\n      <style global jsx>{`\n        html {\n          font-family: \"Quicksand\", \"Source Sans Pro\", -apple-system,\n            BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial,\n            sans-serif; /* 1 */\n          font-size: 16px;\n          word-spacing: 1px;\n          -ms-text-size-adjust: 100%;\n          -webkit-text-size-adjust: 100%;\n          -moz-osx-font-smoothing: grayscale;\n          -webkit-font-smoothing: antialiased;\n          box-sizing: border-box;\n          background-color: #35495e;\n        }\n\n        *,\n        *:before,\n        *:after {\n          box-sizing: border-box;\n          margin: 0;\n        }\n        a {\n          text-decoration: none;\n          color: inherit;\n        }\n        .header-footer {\n          width: 100%;\n          background-color: #141c2f;\n          color: white;\n          padding: 30px;\n          text-align: right;\n        }\n      `}</style>\n    </>\n  );\n};\n\nexport default Index;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AAEA;AAGA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAlBA;AAAA;AAAA;AAuDA;AACA;AACA;;;;A","sourceRoot":""}